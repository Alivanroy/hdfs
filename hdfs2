#!/bin/bash

# Script to download file from HDFS and save to local directory for Splunk monitoring
# Usage: ./hdfs_download.sh <hdfs_path> <app_name> <hdfs_user> <hdfs_password> <webhdfs_host> <webhdfs_port>

# Exit on any error
set -e

# Function to display usage
usage() {
    echo "Usage: $0 <hdfs_path> <app_name> <hdfs_user> <hdfs_password> <webhdfs_host> <webhdfs_port>"
    echo "Example: $0 /data/logs/app.log myapp hdfs_user password hdfs.example.com 50070"
    exit 1
}

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
}

# Validate input parameters
if [ "$#" -ne 6 ]; then
    usage
fi

HDFS_PATH="$1"
APP_NAME="$2"
HDFS_USER="$3"
HDFS_PASSWORD="$4"
WEBHDFS_HOST="$5"
WEBHDFS_PORT="$6"

# Define local directory structure
LOCAL_BASE_DIR="/opt/splunk/data/${APP_NAME}"
TIMESTAMP=$(date '+%Y%m%d_%H%M%S')
FILENAME=$(basename "$HDFS_PATH")
LOCAL_FILE="${LOCAL_BASE_DIR}/${FILENAME}_${TIMESTAMP}"

# Create local directory if it doesn't exist
mkdir -p "$LOCAL_BASE_DIR"

# Function to handle errors
handle_error() {
    log_message "ERROR: $1"
    exit 1
}

# Function to verify file exists in HDFS
verify_hdfs_file() {
    local status_code=$(curl -s -o /dev/null -w "%{http_code}" \
        --user "${HDFS_USER}:${HDFS_PASSWORD}" \
        "http://${WEBHDFS_HOST}:${WEBHDFS_PORT}/webhdfs/v1${HDFS_PATH}?op=GETFILESTATUS")
    
    if [ "$status_code" -ne 200 ]; then
        handle_error "File not found in HDFS or permission denied. Status code: $status_code"
    fi
}

# Function to download file from HDFS
download_from_hdfs() {
    log_message "Starting download of ${HDFS_PATH}"
    
    # First GET request to get redirect URL
    REDIRECT_URL=$(curl -s -i --user "${HDFS_USER}:${HDFS_PASSWORD}" \
        "http://${WEBHDFS_HOST}:${WEBHDFS_PORT}/webhdfs/v1${HDFS_PATH}?op=OPEN" \
        | grep -i "Location" | awk '{print $2}' | tr -d '\r\n')
    
    if [ -z "$REDIRECT_URL" ]; then
        handle_error "Failed to get redirect URL"
    fi
    
    # Follow redirect to download file
    curl -s -o "$LOCAL_FILE" --user "${HDFS_USER}:${HDFS_PASSWORD}" "$REDIRECT_URL"
    
    if [ $? -ne 0 ]; then
        handle_error "Failed to download file"
    fi
}

# Function to verify local file
verify_local_file() {
    if [ ! -f "$LOCAL_FILE" ]; then
        handle_error "Local file was not created"
    fi
    
    if [ ! -s "$LOCAL_FILE" ]; then
        handle_error "Local file is empty"
    }
}

# Main execution
main() {
    log_message "Starting script execution"
    log_message "Parameters: HDFS Path: $HDFS_PATH, App Name: $APP_NAME"
    
    # Verify HDFS file exists
    verify_hdfs_file
    
    # Download file
    download_from_hdfs
    
    # Verify local file
    verify_local_file
    
    # Set appropriate permissions for Splunk
    chmod 644 "$LOCAL_FILE"
    
    log_message "Successfully downloaded file to: $LOCAL_FILE"
    
    # Output the local file path (can be used by Control-M)
    echo "$LOCAL_FILE"
}

# Execute main function
main
